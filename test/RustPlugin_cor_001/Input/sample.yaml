connectivityPlugins:
  classifierCodec:
    libraryName: ClassifierCodec
    class: ClassifierCodec
  rustTransport:
    directory: ${TEST_TRANSPORT_DIR}
    libraryName: echo_transport
    class: EchoTransport
  stringCodec:
    libraryName: connectivity-string-codec
    class: StringCodec
  diag:
    libraryName: DiagnosticCodec
    class: DiagnosticCodec
  mapperCodec:
    libraryName: MapperCodec
    class: MapperCodec

startChains:
  rustTransport:
    # Use the Map host plugin, so the payload type will be a map<string,data>
    # with the keys being the name of the fields in the event
    - apama.eventMap:
        # Capture events to this channel ...
        subscribeChannels:
          - fromhost
        # ... and send them back to this channel
        defaultChannel: intohost
        defaultEventType: apamax.rust.EchoResponse
        allowMissing: true

    - mapperCodec:
        "*":
          towardsTransport:
            mapFrom:
              - metadata.requestId: payload.id
              - payload: payload.data
          #towardsHost:
            #mapFrom:
              #- payload.data: payload
              #- payload.id: metadata.requestId
              #- metadata.temp.channel: metadata.sag.channel
              #- metadata.temp.type: metadata.sag.type
    - diag: { tag: rusttransport }
    - rustTransport:
        k1: "v1"
        k2:
          - "l1"
          - "l2"

